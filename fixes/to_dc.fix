# to dc
librecat_uri_base('uri_base')
copy_field('uri_base','tmp_id.$append')
add_field(tmp_id.$append, record)
copy_field(_id, tmp_id.$append)
join_field(tmp_id, '/')
move_field(tmp_id, dc.identifier.$append)

copy_field(type, driver_type)
lookup(driver_type, fixes/lookup/driver_types.csv)
prepend(driver_type,'info:eu-repo/semantics/')
move_field(driver_type, 'dc.type.$append')

copy_field(type, dini_type)
lookup(dini_type, fixes/lookup/dini_types.csv, default: other)
prepend(dini_type,'doc-type:')
copy_field(dini_type, dc.type.$append)
add_field(dc.type.$append, text)

move_field(title,dc.title.$append)
move_field(alternative_title.0,dc.title.$append)

move_field(author.*.full_name,dc.creator.$append)
move_field(editor.*.full_name,dc.creator.$append)
move_field(corporate_editor.*,dc.creator.$append)

move_field(year, dc.date.$append)
move_field(publisher, dc.publisher.$append)

move_field(keyword.*, dc.subject.$append)
prepend(ddc.*, 'ddc:')
move_field(ddc.*, dc.subject.$append)

move_field(citation.ama, dc.source.$append)

move_field(abstract.*.text, dc.description.$append)

move_field(language.*.iso, dc.language.$append)
lookup(dc.language.*, fixes/lookup/oai_lang.csv)

prepend(doi, 'doi/')
move_field(doi, dc.relation.$append)
prepend(publication_identifier.issn.*, 'issn/')
move_field(publication_identifier.issn.*, dc.relation.$append)
prepend(publication_identifier.eissn.*, 'issn/')
move_field(publication_identifier.eissn.*, dc.relation.$append)
prepend(publication_identifier.isbn.*, 'isbn/')
move_field(publication_identifier.isbn.*, dc.relation.$append)
prepend(external_id.urn.*, 'urn/')
move_field(external_id.urn.*, dc.relation.$append)
prepend(external_id.isi.*, 'wos/')
move_field(external_id.isi.*, dc.relation.$append)
prepend(external_id.arxiv.*, 'arxiv/')
move_field(external_id.arxiv.*, dc.relation.$append)
prepend(external_id.pmid.*, 'pmid/')
move_field(external_id.pmid.*, dc.relation.$append)

prepend(dc.relation.*, 'info:eu-repo/semantics/altIdentifier/')

if exists(project)
  do list(path:project, var:loop)
    if any_match(loop.call_identifier, 'FP7')
      prepend(loop.grant_number, 'FP7/')
    end
    if any_match(loop.call_identifier, 'H2020')
      prepend(loop.grant_number, 'H2020/')
    end
    prepend(loop.grant_number, 'info:eu-repo/grantAgreement/EC/')
    move_field(loop.grant_number, dc.relation.$append)
  end
end

if exists(cc_license)
  lookup(cc_license, fixes/lookup/licenses.csv)
  move_field(cc_license, dc.rights.$append)
end


do list(path: file,var:loop)
  do identity()
    if all_match(loop.access_level, open_access)
      copy_field('uri_base','tmpfile.$append')
      add_field(tmpfile.$append, download)
      copy_field(_id, tmpfile.$append)
      copy_field(loop.file_id, tmpfile.$append)
      join_field(tmpfile,'/')
      move_field(tmpfile, dc.identifier.$append)
    end
  end
end

# set to OA if at least one file is OA
if any_match(oa, '1')
  add_field(dc.rights.$append, 'info:eu-repo/semantics/openAccess')
else
  if any_match(file.*.embargo, '^\d{4}')
    add_field(dc.rights.$append, 'info:eu-repo/semantics/embargoedAccess')
  end
end

unless exists(dc.rights)
  if any_match(file.*.access_level, local)
    add_field(dc.rights.$append, 'info:eu-repo/semantics/restrictedAccess')
  end
end

unless exists(dc.rights)
  add_field(dc.rights.$append, 'info:eu-repo/semantics/closedAccess')
end
